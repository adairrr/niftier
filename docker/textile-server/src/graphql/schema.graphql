type User {
  _id: String!
  address: String
  did: String
}

input UserCreateInput {
  address: String! # mandate address
  did: String
}

input UserUpdateInput {
  _id: String!
  address: String
  did: String
}

type UserCreateUpdatePayload {
  user: User # nullable in case of error
}

type Query {
  users: [User]
}

type Mutation {
  createUser(user: UserCreateInput!): UserCreateUpdatePayload
  updateUser(user: UserUpdateInput!): UserCreateUpdatePayload
  deleteUser(_id: String!): Boolean
}

type Subscription {
  userAdded: User
  userDeleted: String
}
