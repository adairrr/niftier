type AccountData {
  _id: String! # textile ID
  id: String!
  did: String
}

input AccountDataCreateInput {
  id: String!
  did: String
}

input AccountDataUpdateInput {
  id: String!
  did: String
}

type AccountDataPayload {
  accountData: AccountData # nullable in case of error
}

type Query {
  accountData(id: String!): AccountData # search via address
  accountDatasByIds(ids: [String!]!): [AccountData]!
  accountDatas: [AccountData]
}

type Mutation {
  createAccountData(accountData: AccountDataCreateInput!): AccountDataPayload
  updateAccountData(accountData: AccountDataUpdateInput!): AccountDataPayload
  deleteAccountData(_id: String!): Boolean
}

type Subscription {
  accountDataAdded: AccountData
  accountDataDeleted: String
}
