apiVersion: v1
kind: Pod
metadata:
  name: graph-node
  namespace: ambassador
  labels:
    service: graph-node
spec:
  # selector:
  #   matchLabels:
  #     service: graph-node
  containers: 
  - name: subgraph-node
    image: graphprotocol/graph-node
    imagePullPolicy: IfNotPresent
    ports: 
      - containerPort: 8000 # GraphiQL / HTTP / GraphQLServer
        hostPort: 8000
      - containerPort: 8001 # Websocket / SubscriptionServer
        hostPort: 8001
      - containerPort: 8020 # Admin JSON-RPC / JsonRpcServer
        hostPort: 8020
      - containerPort: 8030 # Indexing status / IndexNodeServer
        hostPort: 8030
      - containerPort: 8040 # Metrics server
        hostPort: 8040
    envFrom: 
      - configMapRef:
          name: subgraph-node
      - secretRef:
          name: subgraph-node

  - name: subgraph-postgres
    image: postgres
    imagePullPolicy: IfNotPresent
    args:
      - postgres
      - -cshared_preload_libraries=pg_stat_statements
    ports:
      - containerPort: 5432
    envFrom:
      - configMapRef:
          name: subgraph-postgres
    volumeMounts:
      - mountPath: /data/postgres
        name: subgraph-postgres

  - name: subgraph-ipfs
    image: ipfs/go-ipfs:v0.4.23
    imagePullPolicy: IfNotPresent
    ports:
      - containerPort: 5001
    volumeMounts:
      - mountPath: /data/ipfs
        name: subgraph-ipfs

  volumes:
    - name: subgraph-postgres
      persistentVolumeClaim:
        claimName: subgraph-postgres
    - name: subgraph-ipfs
      persistentVolumeClaim:
        claimName: subgraph-ipfs
