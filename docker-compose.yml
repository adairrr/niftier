version: '3'
services:
  ####### CERAMIC #######
  ceramic-node:
    # build:
    #   context: ./docker/ceramic-node
    #   dockerfile: Dockerfile
    image: adairrr/ceramic-node-kubernetes
    # user: 'node'
    working_dir: /root/.ceramic
    ports:
      - '7007:7007'
    expose: 
      - '7007'
    volumes:
      - ./docker/ceramic-node/data/ceramic:/root/.ceramic
    entrypoint: ["docker-entrypoint.sh", "run-ceramic-daemon.sh"]

  ####### TEXTILE #######
  graphql-textile:
    # build:
    #   context: ./packages/textile-server
    #   dockerfile: Dockerfile
    image: adairrr/graphql-textile-kubernetes
    tty: true
    environment:
      - PORT=9000
    ports:
      - '9000:9000'
    expose: 
      - '9000'
    restart: always
    logging:
      driver: 'json-file'
      options:
        max-size: '15m'
        max-file: '3'

  ####### SUBGRAPH #######
  graph-node:
    image: graphprotocol/graph-node
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8020:8020'
      - '8030:8030'
      - '8040:8040'
    depends_on:
      - ipfs
      - postgres
    environment:
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      ethereum: 'localhost:http://172.18.0.1:8545'
      RUST_LOG: info
  ipfs:
    image: ipfs/go-ipfs:v0.4.23
    ports:
      - '5001:5001'
    volumes:
      - ./docker/graph-node/data/ipfs:/data/ipfs
  postgres:
    image: postgres
    ports:
      - '5432:5432'
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
    volumes:
      - ./docker/graph-node/data/postgres:/var/lib/postgresql/data

  ####### STITCHED #######
